<html>

<body onload="canvas.setup()">
   
 
    <body style="background-color:rgb(0, 0, 0);">

    <canvas id="canvasArea1" style="position: absolute; left: 0; top: 0; z-index: 0; width:100%;height:100%"></canvas>
    <canvas id="canvasArea2"
        style="visibility: hidden; position: absolute; left: 0; top: 0; z-index: 0; width:100%;height:100%"></canvas>

    <script src="./canvas.js"></script>
</body>

</html>
<script>
    
    var canvas=document.querySelector('canvas');
    canvas.width=window.innerWidth;
    canvas.height=window.innerHeight;

    var c = canvas.getContext('2d');

    var colr=["#ffaa33","#99ffaa","#00ff00","#4411aa","#ff1100"];
    mwhere={
    x: undefined,
    y: undefined
    };
    window.addEventListener("mousemove",function(event)
    {
        mwhere.x=event.x;
        mwhere.y=event.y;
    });
    var maxrad=50;

    var flag = 0;
    var play = 0;
    window.addEventListener("keydown",function(event)
    {
        if(event.keyCode == 83) {
            flag = 1;
        }
        else if(event.keyCode == 32) {
            play = 1;
        }
    })

    mclick = {
        x : undefined,
        y : undefined
    };

    class Player
    {
        constructor(x,y,radius,col)
        {
            this.x=x;
            this.y=y;
            this.radius=radius;
            this.col=col;
        }
        draw= function()
        {
            c.beginPath();
            // c.globalAlpha=1;
            c.arc(this.x,this.y,this.radius,0,Math.PI*2,false);
            c.fillStyle=this.col;
            c.fill()
        }
        update= function()
        {
            // if (this.x+this.radius>canvas.width || this.x-this.radius<0)
            // {
            //     this.vx=-this.vx;
            // }   
            // if (this.y+this.radius>canvas.height || this.y-this.radius<0)
            // {
            //     this.vy=-this.vy;
            // }
            this.x=mwhere.x;
            canvas.height;
            this.draw();
        }
    }
    class Pellets
    {
        constructor(x,y,vy,radius,col)
        {
            this.x=x;
            this.y=y;
            this.vy=vy;
            this.radius=radius;
            this.col=col;
            this.xt=x;
        }
        draw = function()
        {
            c.beginPath();
            c.arc(this.x,this.y,this.radius,0,Math.PI*2,false);
            c.fillStyle=this.col;
            c.fill();
        }
        update=function()
        {
            this.x=this.xt;
            this.y+=this.vy;
            this.draw();
        }
    }
    class MenuCircle
    {
        constructor(x,y,radius,vx,vy,col,initrad)
        {
            this.x=x;
            this.y=y;
            this.vx=vx;
            this.vy=vy;
            this.radius=radius;
            this.col=col;
            this.initrad=radius;
        }

        draw = function()
        {
            c.beginPath();
            c.globalAlpha=1;
            c.arc(this.x,this.y,this.radius,0,Math.PI*2,false);
            c.fillStyle=this.col;
            c.fill()
            c.beginPath();
            c.arc(this.x,this.y,this.radius+this.radius,0,Math.PI*2,false);
            c.globalAlpha=0.2;
            c.fillStyle=this.col;
            c.fill();
        }
        
        update=function()
        {
            if (this.x+this.radius>canvas.width || this.x-this.radius<0)
            {
                this.vx=-this.vx;
            }   
            if (this.y+this.radius>canvas.height || this.y-this.radius<0)
            {
                this.vy=-this.vy;
            }
            this.x+=this.vx;
            this.y+=this.vy;
            
           
            if(mwhere.x-this.x<50 && this.x-mwhere.x<50 && mwhere.y-this.y<50 && this.y-mwhere.y<50 && this.radius<=maxrad)
            {
                this.radius+=3;
            }
            else if(this.radius>=this.initrad)
            {
                this.radius-=0.2;
            }

            this.draw();
        }
    }
    MenucircleArray=[];
    for(var i=0;i<300;i++)
    {
        radius=Math.random()*7+3;
        var y= Math.random()*(canvas.height - radius*2) + radius;
        var x= Math.random()*(canvas.width - radius*2) + radius;
        var vx=(Math.random()-0.5)*1;
        var vy=(Math.random()-0.5)*1;
        MenucircleArray.push(new MenuCircle(x,y,radius,vx,vy,colr[Math.floor(Math.random()*colr.length)]));
    }
    player1=new Player(canvas.width/2,canvas.height,40,"rgb(255,255,0)");
    pel= [];

    window.addEventListener("mousedown", function(event)
    {  
        pel.push(new Pellets(mclick.x,window.innerHeight,-10,2,"rgb(255,255,0)"));
        mclick.x = event.clientX;
    });

    class GameEnemy 
    {
        constructor(x,y,dx,dy,acc,radius,color) 
        {
            this.x = x;
            this.y = y;
            this.vx = vx;
            this.vy = vy;
            this.acc = acc;
            this.radius = radius;
            this.color = color;
        }

        draw = function() {
            c.beginPath();
            c.arc(this.x,this.y,this.radius,0,Math.PI*2,false);
            c.fillStyle=this.color;
            c.fill();
        }

        update = function()
        {
            if(this.y+this.radius >= window.innerHeight) 
            {
                this.vy = -this.vy;
            }
            else
            {
                this.vy += this.acc;
            }
            this.y += this.vy;
            this.draw();
        }
    }
    flagEnd=false;
    EnemyCircle = [];
    var score = 0;

    for(var i = 0; i < 20; i++) {
        radius=Math.random()*5+5;
        y = -200;
        x = Math.random()*(canvas.width - radius*2) + radius;
        vx = 0;
        vy = 1;
        acc = (0.05);
        EnemyCircle.push(new GameEnemy(x,y,vx,vy,acc,radius,colr[Math.floor(Math.random()*colr.length)]));
    }

    function animate()
    {
        requestAnimationFrame(animate);
        
        if(flag!==1)
        {   c.clearRect(0,0,canvas.width,canvas.height);
            for(var i=0;i<MenucircleArray.length;i++)
            {
                MenucircleArray[i].update();
            }
            c.globalAlpha=1;
            c.font = "30px Arial";
            c.fillStyle = 'white';
            c.fillText("Press S to begin", Math.floor(window.innerWidth/2 - 70), Math.floor(window.innerHeight/2));
            c.globalAlpha=0.2;
            c.fillStyle="#FFFFFF";
            c.fillRect(Math.floor(window.innerWidth/2 - 110), Math.floor(window.innerHeight/2 -60),300, 100);
            c.globalAlpha=1;
        }
        else if(flag == 1 && play==0) {
            c.clearRect(0,0,canvas.width,canvas.height);
            c.globalAlpha=1;
            c.font = "30px Arial";
            c.fillStyle = 'white';
            c.fillText("Move your mouse to move the player and Left Click to shoot - Press Space to start",227, Math.floor(window.innerHeight/2));
        }
        else if(play == 1 && flag == 1 && flagEnd==false) {
            c.fillStyle='rgba(0,0,0,0.05)';
            c.clearRect(0,0,canvas.width,canvas.height);
            player1.update();
            for(var i = 0; i < EnemyCircle.length; i++){
                EnemyCircle[i].update();
            }
            for(var i = 0; i < pel.length; i++) {
               if(pel[i].y>=10){ 
                pel[i].update();
               }
               else{
                   pel.splice(i,1);
               }
            }
            for (var i=0; i<EnemyCircle.length;i++)
            {
                if(Math.hypot(Math.abs(player1.x -EnemyCircle[i].x),Math.abs(player1.y -EnemyCircle[i].y))-player1.radius-EnemyCircle[i].radius<=0)
                    {
                        EnemyCircle.splice(i,1);
                        player1.col="#000000";
                        flagEnd=true
                    }
            }
            for(var i =0; i<20;i++)
            {
                for(var j = 0; j < pel.length; j++) {
                    if( Math.hypot(Math.abs(pel[j].x -EnemyCircle[i].x),Math.abs(pel[j].y -EnemyCircle[i].y))-pel[j].radius-EnemyCircle[i].radius<=0)
                    {
                        EnemyCircle.splice(i,1);
                        pel.splice(j,1);
                        score += 10;
                    }
                }
            }
            
            c.globalAlpha=1;
            c.font = "30px Arial";
            c.fillStyle = 'white';
            c.fillText(score, Math.floor(window.innerWidth - 100), Math.floor(window.innerHeight - 100));

        }
        else if(flagEnd=true)
        {
            c.clearRect(0,0,canvas.width,canvas.height);
            console.log("sexus");
        }
    }
    animate();
    
    function main() {
        canvas.clear();
    }
    
    canvas.mainFunction = main;

    var timeStep = 50;
    canvas.startMain(timeStep);
    canvas.setupFunction = setup;
 
</script>

